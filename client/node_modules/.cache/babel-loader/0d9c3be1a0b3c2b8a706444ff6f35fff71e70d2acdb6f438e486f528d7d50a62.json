{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johna\\\\Desktop\\\\coding\\\\goalie\\\\client\\\\src\\\\pages\\\\GoalPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Auth from \"../utils/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function goalForm() {\n  // Get post title\n  const projectTitle = document.getElementById('projectTitle').value;\n  // Get post content\n  const projectDescription = document.getElementById('projectDescription').value;\n  // Get userId\n  const userId = document.querySelector('#userId').textContent;\n  // Make post to database so we can show it on the site\n  if (projectTitle, projectDescription) {\n    const response = await fetch('/api/projects', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userId,\n        title: projectTitle,\n        description: projectDescription\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.ok) {\n      console.log('Post Posted');\n    } else {\n      alert(response.statusText);\n    }\n  }\n}\n;\nexport default function GoalPage() {\n  _s();\n  const [singleUser, setSingleUser] = useState([]);\n  const [userID, setUserID] = useState([]);\n  async function getUser() {\n    const tokenData = Auth.getProfile();\n    const userInfo = tokenData.data._id;\n    setUserID(userInfo);\n    const response = await fetch(`/api/users/${userID}`);\n    const singleUser = await response.json();\n    setSingleUser(singleUser);\n  }\n  useEffect(() => {\n    getUser();\n  });\n  function refreshPage() {\n    window.location.reload();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    id: \"goalpage\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Goal Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"goalName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Goal Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"goalDescription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => goalForm(),\n        id: \"goalSubmit\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this);\n}\n_s(GoalPage, \"0RaPTukU4bQDq6EaERoCN+Yre0c=\");\n_c = GoalPage;\nvar _c;\n$RefreshReg$(_c, \"GoalPage\");","map":{"version":3,"names":["React","useState","useEffect","Auth","jsxDEV","_jsxDEV","goalForm","projectTitle","document","getElementById","value","projectDescription","userId","querySelector","textContent","response","fetch","method","body","JSON","stringify","user","title","description","headers","ok","console","log","alert","statusText","GoalPage","_s","singleUser","setSingleUser","userID","setUserID","getUser","tokenData","getProfile","userInfo","data","_id","json","refreshPage","window","location","reload","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","_c","$RefreshReg$"],"sources":["C:/Users/johna/Desktop/coding/goalie/client/src/pages/GoalPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Auth from \"../utils/auth\";\r\n\r\nasync function goalForm() {\r\n\r\n  // Get post title\r\n  const projectTitle = document.getElementById('projectTitle').value;\r\n  // Get post content\r\n  const projectDescription = document.getElementById('projectDescription').value;\r\n  // Get userId\r\n  const userId = document.querySelector('#userId').textContent;\r\n  // Make post to database so we can show it on the site\r\n  if (projectTitle, projectDescription) {\r\n    const response = await fetch('/api/projects', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        user: userId,\r\n        title: projectTitle,\r\n        description: projectDescription\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    if (response.ok) {\r\n      console.log('Post Posted');\r\n    } else {\r\n      alert(response.statusText);\r\n    }\r\n  }\r\n  };\r\n  \r\n  export default function GoalPage() {\r\n    const [singleUser, setSingleUser] = useState([]);\r\n    const [userID, setUserID] = useState([]);\r\n  \r\n    async function getUser() {\r\n      const tokenData = Auth.getProfile();\r\n      const userInfo = tokenData.data._id;\r\n      setUserID(userInfo);\r\n      const response = await fetch(`/api/users/${userID}`);\r\n      const singleUser = await response.json();\r\n  \r\n      setSingleUser(singleUser)\r\n    }\r\n    useEffect(() => {\r\n      getUser();\r\n    });\r\n\r\n    function refreshPage(){\r\n      window.location.reload();\r\n  } \r\n\r\n    return (\r\n      <div className=\"container\" id=\"goalpage\">\r\n        <form>\r\n              <label>Goal Name:</label>\r\n            <textarea id=\"goalName\"/>\r\n              <label>Goal Description:</label>\r\n            <textarea id=\"goalDescription\"/>\r\n            <button onClick={() =>goalForm()} id=\"goalSubmit\" type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}